kind: ConfigMap
apiVersion: v1
metadata:
  name: oauth2clients
  namespace: kube-public
  labels:
    app.kubernetes.io/name: oauth2clients
    busola.io/extension: resource
    busola.io/extension-version: '0.5'
data:
  dataSources: |
    oauth2clients:
      resource:
        kind: OAuth2Client
        version: v1alpha1
        group: hydra.ory.sh
        namespace: null
    secret:
      resource:
        kind: Secret
        version: v1
      filter: '$item.metadata.name = $root.spec.secretName'
  details: |-
    header: 
      - source: 'status.state ? "error" : "ok"'
        highlights:
          positive:
            - ok
          negative: 
            - error
        name: status
        widget: Badge
      - source: '"deprecation.short"'
        widget: Alert
        severity: warning
    body: 
      - name: configuration
        widget: Panel
        children:
          - name: spec.redirectUris
            source: spec.redirectUris
            widget: Labels
            visibility: $exists(spec.redirectUris)
          - name: spec.postLogoutRedirectUris
            source: spec.postLogoutRedirectUris
            widget: Labels
            visibility: $exists(spec.postLogoutRedirectUris)
          - name: spec.clientName
            source: spec.clientName
            widget: Labels
            visibility: $exists(spec.clientName)
          - name: spec.responseTypes
            source: spec.responseTypes
            widget: Labels
          - name: spec.grantTypes
            source: spec.grantTypes
            widget: Labels
          - name: spec.scope
            source: spec.scope
            widget: Labels
          - name: spec.audience
            source: spec.audience
            widget: Labels
            visibility: $exists(spec.audience)
          - name: spec.secretName
            widget: ResourceLink
            source: spec.secretName
            resource:
              name: spec.secretName
              namespace: $root.metadata.namespace
              kind: "'Secret'"
          - name: spec.tokenEndpointAuthMethod
            source: spec.tokenEndpointAuthMethod
            widget: Labels
      - name: data
        widget: Panel
        source: $secret().items.data
        decodable: true
        children:
          - name: secret.client_id
            source: client_id
          - name: secret.client_secret
            source: client_secret
  form: |
    - path: metadata.name
      extraPaths:
        - spec.secretName
        - metadata.labels['app.kubernetes.io/name']
    - path: spec.responseTypes
      simple: true
      required: true
      widget: MultiCheckbox
      name: Response Types
      options:
        - key: id_token
          name: ID Token
        - key: code
          name: Code
        - key: token
          name: Token
    - path: spec.grantTypes
      simple: true
      required: true
      widget: MultiCheckbox
      options:
        - key: client_credentials
          name: Client Credentials
        - key: authorization_code
          name: Authorization Code
        - key: implicit
          name: Implicit
        - key: refresh_token
          name: Refresh Token
    - name: spec.clientName
      path: spec.clientName
      widget: Text      
    - name: spec.secretName
      path: spec.secretName
      widget: Resource
      resource:
        kind: Secret
        scope: namespace
        version: v1  
    - name: spec.tokenEndpointAuthMethod
      path: spec.tokenEndpointAuthMethod
      enum:
        - none
        - client_secret_basic
        - client_secret_post
        - private_key_jwt
    - name: spec.scope
      widget: Text
      simple: true
      path: spec.scope
      inputInfo: 'You can provide more then one Scope, but they have to be separated by a Space'    
    - widget: SimpleList
      name: spec.redirectUris
      defaultExpanded: true
      path: spec.redirectUris
      inputInfo: "Input must consist of two parts, which are separated by ':' (e.g. 'test:temp')"      
      children:
        - path: '[]'
    - name: spec.postLogoutRedirectUris
      path: spec.postLogoutRedirectUris
      widget: SimpleList
      defaultExpanded: true
      inputInfo: "Input must consist of two parts, which are separated by ':' (e.g. 'test:temp')"      
      children:
        - path: '[]'
    - path: spec.audience
      name: spec.audience
      widget: SimpleList
      defaultExpanded: true
      children:
        - path: '[]'
  general: |-
    resource: 
      kind: OAuth2Client
      group: hydra.ory.sh
      version: v1alpha1
    name: OAuth2 Clients
    category: Configuration
    urlPath: oauth2clients
    scope: namespace
    description: >-
      Disclaimer: OAuth2Clients support is discontinued in Kyma! Please make sure to migrate to another solution as a soon as possible.
  list: |-
    - source: '"deprecation.short"'
      widget: Alert
      severity: warning
    - name: spec.secretName
      widget: ResourceLink
      source: spec.secretName
      resource:
        name: spec.secretName
        namespace: $root.metadata.namespace
        kind: "'secret'"
    - source: 'status.state ? "error" : "ok"'
      highlights:
        positive:
          - ok
        negative: 
          - error
      name: status
      widget: Badge
      description: status.message
  injections: |-
    - title: Ory Hydra Deprecation
      widget: Panel
      description: Ory Hydra Deprecation
      source: $
      filter: $item.metadata.uid = ($oauth2clients().items.metadata.uid)[0]
      targets:
        - slot: details-top
          location: ClusterOverview
      order: 3
      children:
        - widget: Panel
          severity: warning
          source: '"deprecation.long"'
          visibility: $item.metadata.uid = ($oauth2clients().items.metadata.uid)[0]
          order: 1
        - source: '"Hydra deprecation blogpost"'
          widget: ExternalLink
          link: '"https://example.com"'
          visibility: $item.metadata.uid = ($oauth2clients().items.metadata.uid)[0]
          order: 2
        - widget: ResourceList
          source: $oauth2clients()
          visibility: $item.metadata.uid = ($oauth2clients().items.metadata.uid)[0]
          name: OAuth2Clients
          disableCreate: true
          order: 3
  presets: |-
    - name: template
      default: true
      value:
        spec:
          scope: ''
          secretName: ''
          tokenEndpointAuthMethod: client_secret_basic  
          responseTypes: []
          grantTypes: []
  translations: |-
    en: 
        metadata.annotations: Annotations
        metadata.labels: Labels
        metadata.creationTimestamp: Created at
        status: Status
        spec.scope: Scope
        spec.responseTypes: Response Types
        spec.grantTypes: Grant Types
        spec.tokenEndpointAuthMethod: Token Endpoint Authentication Method
        spec.tokenEndpointAuthMethod.none: None
        spec.tokenEndpointAuthMethod.client_secret_basic: Client Secret/ Basic
        spec.tokenEndpointAuthMethod.client_secret_post: Client Secret/ POST
        spec.tokenEndpointAuthMethod.private_key_jwt: Private Key/ JWT
        spec.redirectUris: Redirect URIs
        spec.postLogoutRedirectUris: Post-Logout Redirect URIs
        spec.audience: Audience
        spec.secretName: Secret Name
        configuration: Configuration
        data: Data
        spec.clientName: Client Name
        secret.client_id: client_id
        secret.client_secret: client_secret
        deprecation.long: Dear customer, we have detected that you are using Ory Hydra which was officially deprecated on 01.01.2023 and is scheduled for removal on 12.12.2222. Please be advised, that on 12.12.2222 any workloads that use Ory Hydra will probably face outage. If you would like to prevent outage for your workloads, please follow the procedure outline linked underneath before 12.12.2222. If you cannot follow the outlined procedure before 12.12.2222, we will detect the presence of the deprecated configuration and migrate the Ory Hydra to hydra-deprecated namespace in order to prevent outage to your workloads. At that time, we consider Ory Hydra to be managed by you and any required troubleshooting and maintenance will be your responsibility (including, but not limited to security updates, vulnerability fixes and product standards). You can always delete hydra-deprecated and/or follow the migration steps linked underneath if you would like us to provide managed Ory Hydra for you as part of the SAP BTP, Kyma runtime offering.
        deprecation.short: OAuth2Clients support is discontinued in Kyma! Please make sure that you migrate onto a different solution.
